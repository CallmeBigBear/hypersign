syntax = "proto3";
package hypersignprotocol.hidnode.did;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "did/params.proto";
import "did/didSpec.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/hypersign-protocol/hid-node/x/did/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/hypersign-protocol/hidnode/ssi/params";
  }
  // Queries a list of Dids items.
	rpc Dids(QueryDidsRequest) returns (QueryDidsResponse) {
		option (google.api.http).get = "/hypersign-protocol/hidnode/ssi/did/{did}";
	}

// Queries a list of GetSchema items.
	rpc GetSchema(QuerySchemaRequest) returns (QuerySchemaResponse) {
		option (google.api.http).get = "/hypersign-protocol/hidnode/ssi/schema/{schemaId}";
	}

// Queries a list of DidCount items.
	rpc DidCount(QueryDidCountRequest) returns (QueryDidCountResponse) {
		option (google.api.http).get = "/hypersign-protocol/hidnode/ssi/did_count";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryDidsRequest {
  string did = 1;
}

message QueryDidsResponse {
  string didDoc = 1;
}

message QuerySchemaRequest {
  string schemaId = 1;
}

message QuerySchemaResponse {
  string schema = 1;
}

message QueryDidCountRequest {
}

message QueryDidCountResponse {
  uint64 count = 1;
}

// this line is used by starport scaffolding # 3
